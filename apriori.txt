#include <stdio.h>
#include <stdlib.h>
void apriori();
int t[20][20],nt,ni,nit;
float min,alpha;
int main()
{
    int i,j;
    printf("Enter the number of transactions : ");
    scanf("%d",&nt);
    printf("Enter the number of items: ");
    scanf("%d",&ni);
    printf("Enter the value of alpha: ");
    scanf("%f",&alpha);
    min=((alpha*(float)nt)/100);
    printf("Minimum count : %f\n",min);
    for(i=0;i<nt;i++)
    {
        for(j=0;j<ni;j++)
        {
           t[i][j]=-1;
        }
    }
    for(i=0;i<nt;i++)
    {
        printf("Enter the number of items in transaction T%d : ",i);
        scanf("%d",&nit);
        printf("Enter the items in transaction T%d :\n",i);
        for(j=0;j<nit;j++)
        {
            scanf("%d",&t[i][j]);
        }
    }
    printf("The transactions are: \n");
    for(i=0;i<nt;i++)
    {
        printf("T%d : ",i);
        for(j=0;j<ni;j++)
        {
            if(t[i][j] != -1)
             printf("I%d ",t[i][j]);
        }
        printf("\n");
    }
    apriori();
    return 0;
}
void apriori()
{
    int possible[20][20],reduce[20][20];
    int i,j,k,l,x,y,fl,flag,n_poss,count[20],iteration,m,p,n_freq;

    for(i=0;i<ni;i++)//before while
    {
        for(j=0;j<ni;j++)
        {
            possible[i][j]=-1;
        }
    }
    for(i=0;i<ni;i++)//before while
    {
        for(j=0;j<ni;j++)
        {
            reduce[i][j]=-1;
        }
    }
    for(i=0;i<ni;i++)//before while
    {
        possible[i][0]=i;
    }
    n_poss=ni;//before
    iteration=1;//before
    while(1)
    {


        printf("Iteration no %d\n",iteration);//inside while
        for(i=0;i<n_poss;i++)
        {
            count[i]=0;
        }
        for(i=0;i<n_poss;i++)
        {
            for(k=0;k<nt;k++)
            {
                flag=0;
                for(j=0;j<iteration;j++)
                {
                    l=0;
                    //flag=0;
                    while(t[k][l] != -1)
                    {
                        if(possible[i][j]==t[k][l])
                        {
                            flag++;
                            break;
                        }
                        l++;
                    }
                    if(flag==0)
                    {
                        break;
                    }
                    else
                    {
                        if(flag==iteration)
                            count[i]++;
                    }

                }
            }
        }
        if(n_poss != 0)
            printf("The count is as follows: \n");
        for(i=0;i<n_poss;i++)
        {
            for(j=0;j<iteration;j++)
            {
               printf("I%d ",possible[i][j]);

            }
            printf(": %d",count[i]);
            printf("\n");
        }
        k=0;
        for(i=0;i<n_poss;i++)
        {
            if(count[i] >= min)
            {
                for(j=0;j<iteration;j++)
                {
                    reduce[k][j]=possible[i][j];

                }
                k++;
            }
        }
        if(k==0)//no item set possible after checking minimum count
        {
            printf("No further item sets possible. Hence stop\n");
            break;//break out of while
        }
        else
        {
            n_freq=k;
        }
        printf("Selected item sets: \n");
        for(i=0;i<k;i++)
        {
            for(j=0;j<iteration;j++)
            {
                printf("I%d ",reduce[i][j]);
            }
            printf("\n");
        }
        //new possible:
        m=0;
        for(i=0;i<n_freq;i++)
        {
            for(k=(i+1) ; k<n_freq ; k++)
            {


                for(j=0,l=0,p=0; j<iteration && l<iteration;)
                {
                    if(reduce[i][j] < reduce[k][l])
                    {
                        possible[m][p]=reduce[i][j];
                        j++;
                        p++;
                    }
                    else if(reduce[i][j]>reduce[k][l])
                    {
                        possible[m][p]=reduce[k][l];
                        l++;
                        p++;
                    }
                    else
                    {
                        possible[m][p]=reduce[i][j];
                        j++;
                        l++;
                        p++;
                    }
                }

                if(j<iteration)
                {
                    for(;j<iteration;j++)
                    {
                        possible[m][p]=reduce[i][j];
                        p++;
                    }
                }
                else if(l<iteration)
                {
                    for(;l<iteration;l++)
                    {
                        possible[m][p]=reduce[k][l];
                        p++;
                    }
                }
                fl=1;
                if(p == (iteration+1))
                {
                    for(x=0;x<m;x++)
                    {
                        fl=0;
                        for(y=0;y<=iteration;y++)
                        {
                            if(possible[x][y] != possible[m][y])
                            {
                                fl=1;
                                break;
                            }
                        }
                        if(fl==0)
                            break;
                    }
                    if(fl==1)
                    {
                        m++;
                    }
                }
                /*
                if(p == (iteration+1))
                {
                    m++;
                }
                */
            }
        }
        n_poss=m;
        iteration++;
    }

    //after breaking out of while true:
    printf("Frequent item sets are: \n");
    for(i=0;i<n_freq;i++)
    {
        j=0;
        while(reduce[i][j] != -1)
        {
            printf("I%d ",reduce[i][j]);
            j++;
        }
        printf("\n");
    }

}
/*
Enter the number of transactions : 3
Enter the number of items: 5
Enter the value of alpha: 60
Minimum count : 1.800000
Enter the number of items in transaction T0 : 2
Enter the items in transaction T0 :
0
1
Enter the number of items in transaction T1 : 3
Enter the items in transaction T1 :
0
1
2
Enter the number of items in transaction T2 : 3
Enter the items in transaction T2 :
2
3
4
The transactions are:
T0 : I0 I1
T1 : I0 I1 I2
T2 : I2 I3 I4
Iteration no 1
The count is as follows:
I0 : 2
I1 : 2
I2 : 2
I3 : 1
I4 : 1
Selected item sets:
I0
I1
I2
Iteration no 2
The count is as follows:
I0 I1 : 2
I0 I2 : 1
I1 I2 : 1
Selected item sets:
I0 I1
Iteration no 3
No further item sets possible. Hence stop
Frequent item sets are:
I0 I1

Process returned 0 (0x0)   execution time : 38.141 s
Press any key to continue.
*/


/*
Enter the number of transactions : 5
Enter the number of items: 6
Enter the value of alpha: 40
Minimum count : 2.000000
Enter the number of items in transaction T0 : 3
Enter the items in transaction T0 :
0
1
2
Enter the number of items in transaction T1 : 3
Enter the items in transaction T1 :
1
3
4
Enter the number of items in transaction T2 : 4
Enter the items in transaction T2 :
0
1
3
4
Enter the number of items in transaction T3 : 2
Enter the items in transaction T3 :
3
4
Enter the number of items in transaction T4 : 1
Enter the items in transaction T4 :
5
The transactions are:
T0 : I0 I1 I2
T1 : I1 I3 I4
T2 : I0 I1 I3 I4
T3 : I3 I4
T4 : I5
Iteration no 1
The count is as follows:
I0 : 2
I1 : 3
I2 : 1
I3 : 3
I4 : 3
I5 : 1
Selected item sets:
I0
I1
I3
I4
Iteration no 2
The count is as follows:
I0 I1 : 2
I0 I3 : 1
I0 I4 : 1
I1 I3 : 2
I1 I4 : 2
I3 I4 : 3
Selected item sets:
I0 I1
I1 I3
I1 I4
I3 I4
Iteration no 3
The count is as follows:
I0 I1 I3 : 1
I0 I1 I4 : 1
I1 I3 I4 : 2
Selected item sets:
I1 I3 I4
Iteration no 4
No further item sets possible. Hence stop
Frequent item sets are:
I1 I3 I4

Process returned 0 (0x0)   execution time : 33.944 s
Press any key to continue.
*/
/*
Enter the number of transactions : 5
Enter the number of items: 11
Enter the value of alpha: 60
Minimum count : 3.000000
Enter the number of items in transaction T0 : 6
Enter the items in transaction T0 :
0
1
2
3
4
5
Enter the number of items in transaction T1 : 6
Enter the items in transaction T1 :
1
2
3
4
5
6
Enter the number of items in transaction T2 : 4
Enter the items in transaction T2 :
0
3
4
7
Enter the number of items in transaction T3 : 5
Enter the items in transaction T3 :
0
3
5
8
9
Enter the number of items in transaction T4 : 5
Enter the items in transaction T4 :
1
3
4
9
10
The transactions are:
T0 : I0 I1 I2 I3 I4 I5
T1 : I1 I2 I3 I4 I5 I6
T2 : I0 I3 I4 I7
T3 : I0 I3 I5 I8 I9
T4 : I1 I3 I4 I9 I10
Iteration no 1
The count is as follows:
I0 : 3
I1 : 3
I2 : 2
I3 : 5
I4 : 4
I5 : 3
I6 : 1
I7 : 1
I8 : 1
I9 : 2
I10 : 1
Selected item sets:
I0
I1
I3
I4
I5
Iteration no 2
The count is as follows:
I0 I1 : 1
I0 I3 : 3
I0 I4 : 2
I0 I5 : 2
I1 I3 : 3
I1 I4 : 3
I1 I5 : 2
I3 I4 : 4
I3 I5 : 3
I4 I5 : 2
Selected item sets:
I0 I3
I1 I3
I1 I4
I3 I4
I3 I5
Iteration no 3
The count is as follows:
I0 I1 I3 : 1
I0 I3 I4 : 2
I0 I3 I5 : 2
I1 I3 I4 : 3
I1 I3 I5 : 2
I3 I4 I5 : 2
Selected item sets:
I1 I3 I4
Iteration no 4
No further item sets possible. Hence stop
Frequent item sets are:
I1 I3 I4

Process returned 0 (0x0)   execution time : 130.312 s
Press any key to continue.
*/

/*
Enter the number of transactions : 3
Enter the number of items: 5
Enter the value of alpha: 60
Minimum count : 1.800000
Enter the number of items in transaction T0 : 3
Enter the items in transaction T0 :
0
1
2
Enter the number of items in transaction T1 : 4
Enter the items in transaction T1 :
0
1
2
3
Enter the number of items in transaction T2 : 4
Enter the items in transaction T2 :
0
1
3
4
The transactions are:
T0 : I0 I1 I2
T1 : I0 I1 I2 I3
T2 : I0 I1 I3 I4
Iteration no 1
The count is as follows:
I0 : 3
I1 : 3
I2 : 2
I3 : 2
I4 : 1
Selected item sets:
I0
I1
I2
I3
Iteration no 2
The count is as follows:
I0 I1 : 3
I0 I2 : 2
I0 I3 : 2
I1 I2 : 2
I1 I3 : 2
I2 I3 : 1
Selected item sets:
I0 I1
I0 I2
I0 I3
I1 I2
I1 I3
Iteration no 3
The count is as follows:
I0 I1 I2 : 2
I0 I1 I3 : 2
I0 I2 I3 : 1
I1 I2 I3 : 1
Selected item sets:
I0 I1 I2
I0 I1 I3
Iteration no 4
The count is as follows:
I0 I1 I2 I3 : 1
No further item sets possible. Hence stop
Frequent item sets are:
I0 I1 I2
I0 I1 I3

Process returned 0 (0x0)   execution time : 63.652 s
Press any key to continue.
*/
